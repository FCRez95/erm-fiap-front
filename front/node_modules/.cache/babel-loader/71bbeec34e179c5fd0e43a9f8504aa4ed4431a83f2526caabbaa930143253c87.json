{"ast":null,"code":"var _jsxFileName = \"/Users/fabiorezende/Documents/FIAP/godigital/erm-fiap-front/front/src/components/FormElements/FormInput/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { validate } from '../../../utils/validators';\nimport { Container, InputArea, Label, Small } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = _ref => {\n  _s();\n  let {\n    id,\n    type,\n    label,\n    invalidMessage,\n    initialValue,\n    initialValid,\n    placeholder,\n    validators,\n    onInput\n  } = _ref;\n  const [inputState, setInputState] = useState({\n    value: initialValue || '',\n    isValid: initialValid || false,\n    isTouched: false\n  });\n  useEffect(() => {\n    onInput(id, inputState.value, inputState.isValid);\n  }, [inputState]);\n  const changeHandler = event => {\n    setInputState(oldState => ({\n      ...oldState,\n      value: event.target.value,\n      isValid: validate(event.target.value, validators)\n    }));\n  };\n  const touchHandler = event => {\n    setInputState(oldState => ({\n      ...oldState,\n      isTouched: true\n    }));\n  };\n  const InputText = /*#__PURE__*/_jsxDEV(InputArea, {\n    className: `${!inputState.isValid && inputState.isTouched ? 'invalid' : ''}`,\n    placeholder: placeholder,\n    onChange: changeHandler,\n    onFocus: touchHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n  const InputPass = /*#__PURE__*/_jsxDEV(InputArea, {\n    className: `${!inputState.isValid && inputState.isTouched ? 'invalid' : ''}`,\n    placeholder: placeholder,\n    onChange: changeHandler,\n    onFocus: touchHandler,\n    type: \"password\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [label && /*#__PURE__*/_jsxDEV(Label, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this), type === 'password' && InputPass, type !== 'password' && InputText, !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(Small, {\n      children: invalidMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 61\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(FormInput, \"puVBBRt3xEjZiECJvibe206ncDs=\");\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useEffect","useState","validate","Container","InputArea","Label","Small","FormInput","id","type","label","invalidMessage","initialValue","initialValid","placeholder","validators","onInput","inputState","setInputState","value","isValid","isTouched","changeHandler","event","oldState","target","touchHandler","InputText","InputPass"],"sources":["/Users/fabiorezende/Documents/FIAP/godigital/erm-fiap-front/front/src/components/FormElements/FormInput/index.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useReducer, useState } from 'react'\nimport { validate, Validator } from '../../../utils/validators'\nimport { Container, InputArea, Label, Small } from './styles'\n\ninterface Props {\n    id: string\n    type: string\n    label?: string\n    invalidMessage?: string\n    initialValue?: string\n    initialValid?: boolean\n    placeholder?: string\n    validators: Validator[]\n    onInput: (id: string, value: string, isValid: boolean) => void\n}\n\ninterface InputState {\n    value: string\n    isValid: boolean\n    isTouched: boolean\n}\n\nconst FormInput = ({ id, type, label, invalidMessage, initialValue, initialValid, placeholder, validators, onInput }: Props) => {\n    const [inputState, setInputState] = useState<InputState>({\n        value: initialValue || '',\n        isValid: initialValid || false,\n        isTouched: false\n    })\n\n    useEffect(() => {\n        onInput(id, inputState.value, inputState.isValid)\n    }, [inputState])\n\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputState(oldState => ({\n            ...oldState,\n            value: event.target.value,\n            isValid: validate(event.target.value, validators)\n        }))\n    }\n\n    const touchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputState(oldState => ({\n            ...oldState,\n            isTouched: true\n        }))\n    }\n\n    const InputText = (\n        <InputArea \n            className={`${ !inputState.isValid && inputState.isTouched ? 'invalid' : '' }`} \n            placeholder={placeholder}\n            onChange={changeHandler}\n            onFocus={touchHandler}\n        />\n    )\n\n    const InputPass = (\n        <InputArea \n            className={`${ !inputState.isValid && inputState.isTouched ? 'invalid' : '' }`} \n            placeholder={placeholder}\n            onChange={changeHandler}\n            onFocus={touchHandler}\n            type='password'\n        />\n    )\n\n    return(\n        <Container>\n            {label && <Label>{label}</Label>}\n            {type === 'password' && InputPass}\n            {type !== 'password' && InputText}\n            {!inputState.isValid && inputState.isTouched && <Small>{invalidMessage}</Small>}\n        </Container>\n    )\n}\n\nexport default FormInput"],"mappings":";;AAAA,OAAOA,KAAK,IAAiBC,SAAS,EAAcC,QAAQ,QAAQ,OAAO;AAC3E,SAASC,QAAQ,QAAmB,2BAA2B;AAC/D,SAASC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,QAAQ,UAAU;AAAA;AAoB7D,MAAMC,SAAS,GAAG,QAA8G;EAAA;EAAA,IAA7G;IAAEC,EAAE;IAAEC,IAAI;IAAEC,KAAK;IAAEC,cAAc;IAAEC,YAAY;IAAEC,YAAY;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAe,CAAC;EACvH,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAa;IACrDkB,KAAK,EAAEP,YAAY,IAAI,EAAE;IACzBQ,OAAO,EAAEP,YAAY,IAAI,KAAK;IAC9BQ,SAAS,EAAE;EACf,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACZgB,OAAO,CAACR,EAAE,EAAES,UAAU,CAACE,KAAK,EAAEF,UAAU,CAACG,OAAO,CAAC;EACrD,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,MAAMK,aAAa,GAAIC,KAAoC,IAAK;IAC5DL,aAAa,CAACM,QAAQ,KAAK;MACvB,GAAGA,QAAQ;MACXL,KAAK,EAAEI,KAAK,CAACE,MAAM,CAACN,KAAK;MACzBC,OAAO,EAAElB,QAAQ,CAACqB,KAAK,CAACE,MAAM,CAACN,KAAK,EAAEJ,UAAU;IACpD,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMW,YAAY,GAAIH,KAAoC,IAAK;IAC3DL,aAAa,CAACM,QAAQ,KAAK;MACvB,GAAGA,QAAQ;MACXH,SAAS,EAAE;IACf,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMM,SAAS,gBACX,QAAC,SAAS;IACN,SAAS,EAAG,GAAG,CAACV,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACI,SAAS,GAAG,SAAS,GAAG,EAAI,EAAE;IAC/E,WAAW,EAAEP,WAAY;IACzB,QAAQ,EAAEQ,aAAc;IACxB,OAAO,EAAEI;EAAa;IAAA;IAAA;IAAA;EAAA,QAE7B;EAED,MAAME,SAAS,gBACX,QAAC,SAAS;IACN,SAAS,EAAG,GAAG,CAACX,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACI,SAAS,GAAG,SAAS,GAAG,EAAI,EAAE;IAC/E,WAAW,EAAEP,WAAY;IACzB,QAAQ,EAAEQ,aAAc;IACxB,OAAO,EAAEI,YAAa;IACtB,IAAI,EAAC;EAAU;IAAA;IAAA;IAAA;EAAA,QAEtB;EAED,oBACI,QAAC,SAAS;IAAA,WACLhB,KAAK,iBAAI,QAAC,KAAK;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,EAC/BD,IAAI,KAAK,UAAU,IAAImB,SAAS,EAChCnB,IAAI,KAAK,UAAU,IAAIkB,SAAS,EAChC,CAACV,UAAU,CAACG,OAAO,IAAIH,UAAU,CAACI,SAAS,iBAAI,QAAC,KAAK;MAAA,UAAEV;IAAc;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACvE;AAEpB,CAAC;AAAA,GArDKJ,SAAS;AAAA,KAATA,SAAS;AAuDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}