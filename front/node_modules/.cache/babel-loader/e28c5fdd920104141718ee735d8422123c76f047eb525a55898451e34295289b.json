{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useReducer } from 'react';\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const input in state.inputs) {\n        if (input === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[input].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n  }\n};\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value,\n      isValid,\n      inputId: id\n    });\n  }, []);\n  return [formState, inputHandler];\n};\n_s(useForm, \"V5g/jZbgHRfx7oo5RP3ZnkGipkc=\");","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","input","inputs","inputId","isValid","value","useForm","initialInputs","initialFormValidity","formState","dispatch","inputHandler","id"],"sources":["/Users/fabiorezende/Documents/projects/tracker/tracker-frontend/src/hooks/form-hook.tsx"],"sourcesContent":["import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state: any, action:any) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true\n            for(const input in state.inputs) {\n                if (input === action.inputId) {\n                    formIsValid = formIsValid && action.isValid\n                } else {\n                    formIsValid = formIsValid && state.inputs[input].isValid\n                }\n            }\n\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid}\n                },\n                isValid: formIsValid\n            }\n    }\n}\n\nexport const useForm = (initialInputs:any, initialFormValidity:any) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n      inputs: initialInputs,\n      isValid: initialFormValidity,\n    });\n\n    const inputHandler = useCallback((id: string, value: string, isValid: boolean) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value,\n            isValid,\n            inputId: id,\n        });\n    }, []);\n    return [formState, inputHandler];\n  };\n  "],"mappings":";AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAG,CAACC,KAAU,EAAEC,MAAU,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAI,MAAMC,KAAK,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAC7B,IAAID,KAAK,KAAKH,MAAM,CAACK,OAAO,EAAE;UAC1BH,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACM,OAAO;QAC/C,CAAC,MAAM;UACHJ,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,KAAK,CAAC,CAACG,OAAO;QAC5D;MACJ;MAEA,OAAO;QACH,GAAGP,KAAK;QACRK,MAAM,EAAE;UACJ,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACK,OAAO,GAAG;YAAEE,KAAK,EAAEP,MAAM,CAACO,KAAK;YAAED,OAAO,EAAEN,MAAM,CAACM;UAAO;QACpE,CAAC;QACDA,OAAO,EAAEJ;MACb,CAAC;EAAA;AAEb,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG,CAACC,aAAiB,EAAEC,mBAAuB,KAAK;EAAA;EACnE,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACC,WAAW,EAAE;IACpDM,MAAM,EAAEK,aAAa;IACrBH,OAAO,EAAEI;EACX,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAGjB,WAAW,CAAC,CAACkB,EAAU,EAAEP,KAAa,EAAED,OAAgB,KAAK;IAC9EM,QAAQ,CAAC;MACLX,IAAI,EAAE,cAAc;MACpBM,KAAK;MACLD,OAAO;MACPD,OAAO,EAAES;IACb,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACH,SAAS,EAAEE,YAAY,CAAC;AAClC,CAAC;AAAC,GAfSL,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}